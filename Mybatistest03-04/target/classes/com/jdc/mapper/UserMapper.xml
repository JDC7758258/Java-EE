<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
 * 接口式开发
 * 1.方法的名称需要保证和映射文件中的sql语句的statmentId一致
 * 2.namespace的值必须是接口的全路径
 -->

<mapper namespace="com.jdc.mapper.UserMapper">

    <!--select:查询的statement(声明)，用来编写查询语句
        id:语句的唯一标识
        resultType:配置返回的结果集类型
        parameterType:传递的参数类型，可以省略-->

    <!--    <sql id="users"></sql>
    <sql id="someinclude">
        form <include refid="${include_target}"></include>
    </sql>
    <sql id="userColumns">
        uid,uname,uage
    </sql>

    <select id="findById"
            parameterType="int"
            resultType="com.jdc.pojo.User">
        SELECT
        <include refid="userColumns"></include>
        <include refid="someinclude">
            <property name="include_target" value="users"></property>
        </include>
        FROM users
        WHERE uid = #{id}
    </select>-->

    <select id="findById"
            parameterType="int"
            resultType="user">
        select * from users where uid = #{id}
    </select>

    <select id="findTotal"
            resultType="int">
        select count(*) from users
    </select>

        <!--主键自增回写的两种方法-->
<!--    <insert id="addUser" parameterType="user" useGeneratedKeys="true" keyProperty="uid">-->
<!--        INSERT INTO users(uid,uname,uage) VALUES (null,#{uname},#{uage})-->
<!--    </insert>-->

    <!--
        第一种方式：支持主键自增 SELECT LAST_INSERT_ID()
        第二种方式：不支持主键自增 SELECT FLOOR(RAND()*1000+1)
     -->
    <insert id="addUser" parameterType="user">
        <selectKey keyProperty="uid" resultType="Integer" order="BEFORE">
--             SELECT LAST_INSERT_ID()

        <!--生成随机id:SELECT FLOOR(RAND()*1000+1)-->
        SELECT FLOOR(RAND()*1000+1)
        </selectKey>
        INSERT INTO users(uid,uname,uage) VALUES (#{uid},#{uname},#{uage})
    </insert>
    
    <update id="updateUser" parameterType="user">
        UPDATE users SET uname=#{uname},uage=#{uage} WHERE uid=#{uid}
    </update>

    <delete id="deleteUser" parameterType="Integer">
        DELETE FROM users WHERE uid=#{uid}
    </delete>
</mapper>